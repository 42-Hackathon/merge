name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'   # v1.0.0, v1.0.0-beta.1
      - '*.*.*'    # 1.0.0, 0.0.1, 0.1.0-beta.1
  workflow_dispatch: # 수동 실행도 가능

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build app
        run: npm run make
        
      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: flux-windows
          path: out/make/squirrel.windows/x64/*.exe
          
      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: flux-macos
          path: out/make/zip/darwin/x64/*.zip
          
      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: flux-linux
          path: out/make/deb/x64/*.deb

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version from tag
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          if [[ $TAG_NAME == v* ]]; then
            echo "VERSION=${TAG_NAME#v}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=$TAG_NAME" >> $GITHUB_OUTPUT
          fi
        
      - name: Check if prerelease
        id: prerelease
        run: |
          if [[ "${{ steps.version.outputs.VERSION }}" == *"beta"* ]] || [[ "${{ steps.version.outputs.VERSION }}" == *"alpha"* ]] || [[ "${{ steps.version.outputs.VERSION }}" == *"rc"* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Display structure of downloaded files
        run: ls -R
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Flux ${{ steps.version.outputs.VERSION }}
          body: |
            🚀 **Flux ${{ steps.version.outputs.VERSION }}** 출시!
            
            > AI-Powered Knowledge Hub - 흩어진 정보를 강력한 인사이트로 변환하세요
            
            ## 📥 다운로드
            
            ### Windows
            - **flux-setup.exe** - Windows 설치 프로그램
            - 요구사항: Windows 10 이상
            
            ### macOS  
            - **flux-darwin-x64.zip** - macOS 앱 번들
            - 요구사항: macOS 10.15 이상
            
            ### Linux
            - **flux_amd64.deb** - Debian/Ubuntu 패키지
            - 요구사항: Ubuntu 18.04 이상
            
            ## 🔧 설치 방법
            
            ### Windows
            1. `flux-setup.exe` 다운로드
            2. 파일 실행하여 설치 진행
            3. 설치 완료 후 바탕화면에서 Flux 실행
            
            ### macOS
            1. `flux-darwin-x64.zip` 다운로드 
            2. 압축 해제
            3. Flux.app을 Applications 폴더로 드래그
            4. 런치패드에서 Flux 실행
            
            ### Linux
            ```bash
            wget https://github.com/42-Hackathon/merge/releases/download/${{ github.ref }}/flux_amd64.deb
            sudo dpkg -i flux_amd64.deb
            ```
            
            ## 🆕 이번 버전의 주요 기능
            - ✨ **원클릭 수집**: Alt+클릭으로 모든 웹 콘텐츠 수집
            - 🤖 **AI 자동 정리**: 수집된 정보 자동 분류 및 태깅  
            - 🔍 **스마트 검색**: 시맨틱 검색으로 관련 정보 빠르게 찾기
            - 📝 **통합 메모**: 드래그앤드롭으로 정보 조합 및 메모 작성
            - 🔗 **연결 시각화**: 아이디어 간 연결고리 그래프로 표시
            
            ---
            **문제가 발생했나요?** [Issues](https://github.com/42-Hackathon/merge/issues)에 리포트해주세요!
          draft: false
          prerelease: ${{ steps.prerelease.outputs.IS_PRERELEASE }}
          
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: flux-windows/flux-setup.exe
          asset_name: flux-setup.exe
          asset_content_type: application/x-msdownload
          
      - name: Upload macOS Release Asset  
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: flux-macos/flux-darwin-x64-${{ steps.version.outputs.VERSION }}.zip
          asset_name: flux-darwin-x64.zip
          asset_content_type: application/zip
          
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: flux-linux/flux_${{ steps.version.outputs.VERSION }}_amd64.deb
          asset_name: flux_amd64.deb
          asset_content_type: application/vnd.debian.binary-package 